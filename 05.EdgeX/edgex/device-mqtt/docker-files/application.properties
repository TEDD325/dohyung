###############################################################################
# Copyright 2016-2017 Dell Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# @microservice:  device-mqtt
# @author: Jim White, Dell
# @version: 1.0.0
###############################################################################
#REST read data limit
read.max.limit=100
#logging levels (used to control log4j entries)
logging.level.org.springframework=ERROR
logging.level.org.apache=ERROR
logging.level.org.edgexfoundry=INFO
app.open.msg=This is the LINKLAB device-mqtt micro service (docker mode)
#every 5 minutes (in milliseconds)
heart.beat.time=300000
server.port=49982
#default device service settings
service.name=raspi-mqtt-service
#service.host=localhost
service.host=localhost
service.labels=MQTT
service.callback=/api/v1/callback
#connection retry parameters
service.connect.retries=12
service.connect.wait=5000
service.connect.interval=10000
# callback timeout in milliseconds
service.timeout=5000
spring.mvc.dispatch-options-request=true
data.transform=true
mqtt.device.init=Init
mqtt.device.init.args={ value: 1 }
mqtt.device.remove=
mqtt.device.remove.args={ value: 0 }
#-----------------------------------
#Cloud MQTT connection information
#for incoming messages from devices
#Use TestIoTMQTT Broker for testing/dev

INCOMING_MQTT_BROKER_PROTO=tcp
INCOMING_MQTT_BROKER=localhost
INCOMING_MQTT_BROKER_PORT=1883
INCOMING_MQTT_CLIENT_ID=pendulum_pub_at_edgex
#INCOMING_MQTT_TOPIC=STATE_INFO
INCOMING_MQTT_TOPIC=state_info
INCOMING_MQTT_QOS=0
INCOMING_MQTT_USER=link
INCOMING_MQTT_PASS=0123

#keep alive set to 1 hour
INCOMING_MQTT_KEEP_ALIVE=3600

#for command response messages
#for command response messages
RESPONSE_MQTT_BROKER_PROTO=tcp
RESPONSE_MQTT_BROKER=localhost
RESPONSE_MQTT_BROKER_PORT=1883
RESPONSE_MQTT_CLIENT_ID=motor_power_response_at_edgex
RESPONSE_MQTT_TOPIC=motor_power_response
RESPONSE_MQTT_QOS=0
RESPONSE_MQTT_USER=link
RESPONSE_MQTT_PASS=0123
#
##keep alive set to 1 hour
RESPONSE_MQTT_KEEP_ALIVE=3600

#-----------example test device----------------
#provision.mqtt.device=true
#device.profile.name=InvertedPendulumProfile.yml
#device.name=TestMQTTDevice
#device.description=Default Test MQTT Device
#device.labels=MQTT, Test
#device.addressablename=testMQTTAddressable
provision.mqtt.device=false
device.profile.name=InvertedPendulumProfile.yml
device.name=raspi-mqtt-service{!!!!!}
device.description=
device.labels="MQTT"
device.addressablename=

##for outgoing test command messages
#request.broker.proto=TCP
#request.broker=m11.cloudmqtt.com
#request.broker.port=12439
#request.client.id=OutgoingCommandPublisher
#request.topic=CommandTopic
#request.user=tobeprovided
#request.pass=tobeprovided
request.broker.proto=TCP
request.broker=192.168.137.10
request.broker.port=1883
request.client.id=motor_power_at_edgex
request.topic=motor_power
#request.topic=MOTOR_POWER_IDX
request.user=link
request.pass=0123

#------------------- REST Endpoints ---------------------------------------
# metadata database service connection information
#meta.db.addressable.url=http://localhost:48081/api/v1/addressable
#meta.db.deviceservice.url=http://localhost:48081/api/v1/deviceservice
#meta.db.deviceprofile.url=http://localhost:48081/api/v1/deviceprofile
#meta.db.device.url=http://localhost:48081/api/v1/device
#meta.db.devicemanager.url=http://localhost:48081/api/v1/devicemanager
#meta.db.devicereport.url=http://localhost:48081/api/v1/devicereport
#meta.db.command.url=http://localhost:48081/api/v1/command
#meta.db.event.url=http://localhost:48081/api/v1/scheduleevent
#meta.db.schedule.url=http://localhost:48081/api/v1/schedule
#meta.db.provisionwatcher.url=http://localhost:48081/api/v1/provisionwatcher
#meta.db.ping.url=http://localhost:48081/api/v1/ping
meta.db.addressable.url=http://edgex-core-metadata:48081/api/v1/addressable
meta.db.deviceservice.url=http://edgex-core-metadata:48081/api/v1/deviceservice
meta.db.deviceprofile.url=http://edgex-core-metadata:48081/api/v1/deviceprofile
meta.db.device.url=http://edgex-core-metadata:48081/api/v1/device
meta.db.devicemanager.url=http://edgex-core-metadata:48081/api/v1/devicemanager
meta.db.devicereport.url=http://edgex-core-metadata:48081/api/v1/devicereport
meta.db.command.url=http://edgex-core-metadata:48081/api/v1/command
meta.db.event.url=http://edgex-core-metadata:48081/api/v1/scheduleevent
meta.db.schedule.url=http://edgex-core-metadata:48081/api/v1/schedule
meta.db.provisionwatcher.url=http://edgex-core-metadata:48081/api/v1/provisionwatcher
meta.db.ping.url=http://edgex-core-metadata:48081/api/v1/ping

#IOT core database service connection information
#core.db.event.url=http://localhost:48080/api/v1/event
#core.db.reading.url=http://localhost:48080/api/v1/reading
#core.db.valuedescriptor.url=http://localhost:48080/api/v1/valuedescriptor
#core.db.ping.url=http://localhost:48080/api/v1/ping
core.db.event.url=http://edgex-core-data:48080/api/v1/event
core.db.reading.url=http://edgex-core-data:48080/api/v1/reading
core.db.valuedescriptor.url=http://edgex-core-data:48080/api/v1/valuedescriptor
core.db.ping.url=http://edgex-core-data:48080/api/v1/ping
logging.remote.url=http://edgex-support-logging:48061/api/v1/logs

#-----------------Consul Config------------------------------------------
#The health checking path for Service Registry
spring.cloud.consul.discovery.healthCheckPath=/api/v1/ping
